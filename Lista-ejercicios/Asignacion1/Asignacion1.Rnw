\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{bigints}
\usepackage[latin1]{inputenc}
\usepackage{geometry}
\usepackage{amsmath} 
\usepackage{mathtools}
%\usepackage[spanish]{babel}
\usepackage{latexsym}
\geometry{verbose,tmargin=1.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage{graphicx}
\newcommand{\R}{\mathbb{R}}
\newcommand{\bb}[1]{\textbf{#1}}
\DeclareMathOperator{\rank}{\textbf{rango}}
\DeclareMathOperator{\proy}{\textbf{proy}}
\DeclareMathOperator{\nulll}{\textbf{nul}}
\DeclareMathOperator{\diag}{\textbf{diag}}
\DeclareMathOperator{\col}{\textbf{col}}
\DeclareMathOperator{\fila}{\textbf{fila}}
\DeclareMathOperator{\dimm}{dim}
\DeclareMathOperator{\Traz}{Tr}
%\theoremstyle{definition}
\everymath{\displaystyle}
\newtheorem{ejemplo}{{Ejemplo }}[section]
\newtheorem{teo}{{Teorema}}[section]
\newtheorem{defi}{{Definici\'on}}[section]
\newtheorem{pros}{{Proposici\'on}}[section]
\newtheorem{cor}{{Corolario}}[section]
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
library(ggplot2)
library(grid)
#library(animation)
# set global chunk options
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)
@

%\title{\underline{\textbf{Notas de mat\'ematica}}}
%\date{}
%\maketitle
\hspace*{0.5\linewidth}
\begin{minipage}{0.6\linewidth}
Curso: Introducci\'on a la Probabilidad y Estad\'istica CM -274\par
Ejercicios de Laboratorio de R\par
\end{minipage}

\vspace{0.5cm}

\textbf{Lecturas Importantes }
\begin{enumerate}
\item Art\'iculo de Karlijn Willems,  sobre Jupyter and R Markdown: Notebooks con R

\url{https://www.datacamp.com/community/blog/jupyter-notebook-r}.
\end{enumerate}


%{\normalsize Los c\'odigos, se presentaran impresos,  o como un archivo con extensi\'on $.R$, mostrando ejemplos de su ejecuci\'on.}
\setlength{\unitlength}{1in}

\begin{picture}(6,.1) 
\put(0,0) {\line(1,0){6.25}}         
\end{picture}

\vspace{0.5cm}

{\Large Preguntas }

\begin{enumerate}

\item Supongamos que tenemos un conjunto de valores  num\'ericos $x$ de un vector $X$ y un conjunto diferente de valores  num\'ericos $y$ en un vector $Y$.

\begin{itemize}
\item Escribe un programa en R, de c\'omo calcular la distancia m\'inima entre un valor  $x$ y un valor $y$: $\min_{i,j}\vert x_i -y_j\vert $.
\item Determina  el par de  \'indices $(i, j)$ para los que la distancia m\'inima definida anteriormente se alcanza.
\end{itemize}

\item Reproduce en lo posible las siguientes gr\'aficas. Utiliza las funciones \texttt{plot} y \texttt{par}.

\vspace{0.2cm}

\begin{figure}[h]
\centering
\includegraphics[scale=.55]{imagen.png}
\end{figure}

\item Pedro y Pablo juegan un juego que implica lanzamientos repetidos de una moneda. En un lanzamiento dado, si se observan caras, Pedro gana $\$1$ ; de lo contrario, Pedro le da $\$1$ a Pablo.  Si Pedro  comienza con cero dolares y se han realizado $50$ lanzamientos. 

<<fo1, prompt =TRUE, comment =NA, eval=FALSE>>=
options(width=60)
sample(c(-1, 1), size=50, replace=TRUE)


win = sample(c(-1, 1), size=50, replace=TRUE)
cum.win = cumsum(win)
cum.win

par(mfrow=c(2, 2))
for(j in 1:4){
  win = sample(c(-1, 1), size=50, replace=TRUE)
  plot(cumsum(win), type="l" ,ylim=c(-15, 15))
  abline(h=0)
}
@

Reescribe  el siguiente c\'odigo. Responde a las siguientes preguntas, adjuntando la parte del c\'odigo que soporta tu respuesta.

\begin{itemize}
\item ?` Cu\'al es la probabilidad de que Pedro  se retire incluso despu\'es de 100 lanzamientos?
\item ?` Cu\'al es el n\'umero probable de lanzamientos en los que Pedro estar\'a ganando?
\item ?` Cu\'al ser\'a el valor de la mejor ganancia  de Pedro  durante el juego?
\end{itemize}
\item 
\begin{enumerate}
\item Escribe las funciones \texttt{func1} y \texttt{func2} tal que si \texttt{xVect} es el vector $(x_1, x_2, \dots, x_n)$, entonces \texttt{func1(xVect)} retorna el vector $(x_1, x_2^2, \dots, x^n)$ y \texttt{func2(xVect)} retorna el vector $\biggl(x_1, \frac{x_2^2}{2}, \dots \frac{x_n^n}{n}\biggr)$.
\item Escribe una funci\'on \texttt{func3} que toma $2$ argumentos $x$ y $n$ donde $x$ es un n\'umero y $n$ es un entero positivo estricto. La funci\'on debe retornar el valor de:

\[
1 + \frac{x}{1} + \frac{x^2}{2} + \frac{x^3}{3} + \cdots + \frac{x^n}{n}.
\]
\end{enumerate}

\item Un Sudoku es una cuadr\'icula  $9\times9$ que se completa de n\'umeros del $1$ al $9$ de  manera que cualquier n\'umero entre $1$ y $9$ s\'olo aparece una vez en una fila, una columna o un bloque de $3\times 3$ de la cuadr\'icula. Este ejercicio resuelve una cuadr\'icula de  Sudoku simple donde las entradas vac\'ias se  llenan una  a la vez mediante la exclusi\'on de todas las posibilidades una vez.  

El Sudoku que resolvemos est\'a dado por:

<<foob2, prompt=TRUE, comment=NA, eval=FALSE>>=
s=matrix(0,ncol=9,nrow=9)
s[1,c(6,8)]=c(6,4)
s[2,c(1:3,8)]=c(2,7,9,5)
s[3,c(2,4,9)]=c(5,8,2)
s[4,3:4]=c(2,6)
s[6,c(3,5,7:9)]=c(1,9,6,7,3)
s[7,c(1,3:4,7)]=c(8,5,2,4)
s[8,c(1,8:9)]=c(3,8,5)
s[9,c(1,7,9)]=c(6,9,1)
@

\begin{enumerate}
\item Imprime la cuadr\'icula en la pantalla.
\item Definimos el  array $\texttt{pool= array (TRUE, dim = c(9,9,9))}$ de posibles valores para cada entrada (i, j) de la cuadr\'icula, $\texttt{pool[i, j, k]}$ es FALSE si el valor de $k$ puede ser excluido. Escribe el  c\'odigo R que actualiza \texttt{pool} para las entradas ya llenas.
\item Si $i$ es un entero entre $1$ y $81$, explica el significado de $s[i]$.
\item Demuestra que, para una entrada dada $(a,b)$, los \'indices de los n\'umeros enteros en el mismo cuadro de $3\times3$ como $(a, b)$ se definen por

<<foob3, prompt=TRUE, comment=NA, eval=FALSE>>=
boxa=3*trunc((a-1)/3)+1
boxa=boxa:(boxa+2)
boxb=3*trunc((b-1)/3)+1
boxb=boxb:(boxb+2)
@
\item Deduce que los valores de una entrada $(a,b)$ que todavia no est\'an determinados se puede excluir por

<<foob4, prompt=TRUE, comment=NA, eval=FALSE>>=
for (u in (1:9)[pool[a,b,]])
  pool[a,b,u]=(sum(u==s[a,])+sum(u==s[,b])+
      sum(u==s[boxa,boxb]))==0
@
y que ciertas entradas corresponden a

<<foob5, prompt=TRUE, comment=NA, eval=FALSE>>=
if (sum(pool[a,b,])==1) s[i]=(1:9)[pool[a,b,]]
@
\item Resolver la cuadr\'icula con  una exploraci\'on aleatoria de entradas $(a, b)$ que sigue, siempre y cuando la $\texttt{sum(s == 0)> 0}$.

\end{enumerate}
\item  Considere la siguiente curiosidad:

\begin{align*}
8 \times 8 + 13 &= 77 \\
8 \times 88 + 13 &= 717 \\
8 \times 888 + 13 &= 7117 \\
8 \times 8888 + 13 &= 71117 \\
8 \times 8888 + 13 &= 711117 \\
\mbox{etc.}
\end{align*}
Escribe c\'odigo R, que verifica las $10$ primeras ecuaciones, imprimiendo los resultados, usando la f\'ormula dada
\begin{enumerate}
\item usando el bucle \texttt{for}.
\item usando una expresi\'on vectorizada.
\end{enumerate}
\item  Supongamos que \textbf{x} = $(x_1, x_2, \dots, x_n)$ denota el vector \texttt{xVect} y \textbf{y} = $(y_1, y_2, \dots, y_n)$ denota el vector \texttt{yVect}.

\begin{enumerate}
\item Crea el vector $(y_2 - x_1, \dots, y_n - x_{n -1})$.
\item Crea el vector $\biggl( \frac{\sin(y_1)}{\cos(x_2)}, \frac{\sin(y_2)}{\cos(x_3)}, \dots, \frac{\sin(y_{n -1})}{\cos (x_n)}\biggr)$.
\item Crea el vector $(x_1 + 2x_2 -x_3, x_2 + 2x_3 -x_4, \dots, x_{n -2} + 2x_{n -1} -x_n)$.
\item Calcula $\displaystyle \sum_{i = 1}^{n -1} \frac{e^{-x_{i +1}}}{x_i + 10}$.
\end{enumerate}
\item  Escribe los programas correspondientes a los siguientes problemas: 
\begin{enumerate}
\item Un palillo  se rompe al azar en 3 piezas. Escribe c\'odigo  en  R que calcule y devuelva la probabilidad de que las piezas puedan formar un tri\'angulo.
\item Escribe una funci\'on que toma como  un \'unico argumento una matriz y que devuelve una matriz, que es la misma que el argumento, pero cada n\'umero impar es duplicado.
\end{enumerate}

\item 

\begin{enumerate}
\item  Supongamos que $x$ es un vector num\'erico. \textbf{Explica en detalle}, como las siguientes expresiones son evaluadas y que valores toman:

<<foo1, comment = NA, prompt =TRUE, eval= FALSE>>=
sum(!is.na(x))
c(x,x[-(1:length(x))])
x[length(x) + 1]/length(x)
sum(x > mean(x))
@

\item Considera el siguiente problema: Dada una matriz num\'erica $X$, determinar el \'indice de la primera fila cuyos elementos son todos n\'umeros positivos (y que no contiene NA valores).
Resuelve este problema usando un bucle \texttt{for}.

\item La matriz de Hilbert $n \times n$ tiene a los elementos $(i,j)$ dados por $1/(i + j-1)$.
\begin{itemize}
\item Escribe una funci\'on que muestra una matriz de Hilbert $n \times n$ como salida para entero positivo $n$.
\item ?` Son todas las matrices de Hilbert invertibles?.
\item Usa \texttt{solve()} y \texttt{qr.solve()} para calcular la inversa de las matrices Hilbert, por ejemplo, cuando $n = 10$.
\end{itemize}
\end{enumerate}
\item Suponga que ha sido seleccionado para ayudar a Rafael Nadal para calcular la probabilidad de que gane un juego, un set o un partido. Como es sabido que usted es un cient\'ifico, conocedor de matem\'aticas y programaci\'on, se le dar\'an dos trabajos:

\begin{enumerate}
\item Halle una expresi\'on (puede ser recursiva o iterativa) para calcular lo deseado. 
\item Escribe un algoritmo en base a su expresi\'on para dar una respuesta para alg\'un valor. 
\end{enumerate}

Si es que no se acuerda de las reglas del tenis, las explicaremos en detalle:

\begin{itemize}
\item  Punto: Cada punto es iniciado por el servicio de alguno de los jugadores y cuando uno de los jugadores falle en realizar una jugada legal, pierde la anotaci\'on.
\item Juego: Cada juego tiene un sistema de puntuaci\'on de $15-30-40$ con cada anotaci\'on y un sistema de deduce en el caso de un empate $40-40$. El sistema en este caso indica que los puntos deben tener una diferencia de 2 entre s\'i para poder ganar, por lo que si un jugador hace una anotaci\'on m\'as se va al $D-40$ y con otra del mismo, ganar\'ia el juego. En el mismo caso, si es que el jugador rival obtiene un punto, entonces los puntajes regresan a $40-40$. Algo como lo siguiente se dar\'ia: $J1$ anota. Puntuaci\'on: $D-40$. $J2$ anota. Puntuaci\'on: $40-40$. $J1$ anota. Puntuaci\'on: $D-40$. $J1$ anota. Fin del juego, gana $J1$.
\item Set: Un jugador gana un set si es que gana al menos $6$ juegos y lleva una ventaja a su rival de al menos $2$ juegos. Al igual que en el caso del juego, se usa un sistema de tiebreak para determinar al ganador en el caso de que se llegue a dar una puntuaci\'on de $5-5$. En este caso, gana el que llegue a $7-5$. En el caso de que de $5-5$ se vayan a $6-6$, se usa el sistema tiebreak de $12$ puntos.
\item Tiebreak (12 puntos): Con este juego se determina cu\'al de los dos jugadores ser\'a el ganador del set, en este juego especial se dan las mismas condiciones que en el juego simple, pero para poder ganar se deben realizar como m\'inimo $7$ puntos y tener una ventaja de $2$ como m\'inimo, usando el sistema de deduce del juego simple.
\item Partido: El ganador de un partido es el primero en ganar $2$ sets.
\end{itemize}

Rafael sabe que su probabilidad de obtener un punto es de $p$ sin importar si es \'el el que sirve o no.

\item Este script simula la probabilidad de obtener $3$ caras en lanzamientos de monedas, est\'a divido en $3$ partes: Escribe el c\'odigo para la prueba, determina  el \'exito de la prueba y \mbox{implementa } la replicaci\'on. El n\'umero $1$ representa las caras y $0$ los sellos. 

<<foo1G, comment = NA, prompt =TRUE, eval= FALSE>>=
#Prueba Experimental

prueba <- sample(0:1, 3, replace=TRUE)
# Exito

if (sum(prueba )==3) 1 else 0
# Repeticion

n <- 10000   # Numero de iteraciones
simlista <- replicate(n, 0) ## Inicializa la lista con 0's
for (i in 1:n)
{
	prueba <- sample(0:1, 3, replace=TRUE)
	exito <- if (sum(prueba )==3) 1 else 0
	simlista[i] <- exito
}
# Resultado simulado
mean(simlista)
@
Modifica el c\'odigo anterior para simular la probabilidad de obtener exactamente una cara en cuatro lanzamientos de moneda.
\end{enumerate}

\end{document}
