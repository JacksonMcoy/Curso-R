\documentclass{article}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{bigints}
\usepackage[latin1]{inputenc}
\usepackage{geometry}
\usepackage{amsmath} 
\usepackage{mathtools}
%\usepackage[spanish]{babel}
\usepackage{latexsym}
\geometry{verbose,tmargin=1.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage{graphicx}
\newcommand{\R}{\mathbb{R}}
\newcommand{\bb}[1]{\textbf{#1}}
\DeclareMathOperator{\rank}{\textbf{rango}}
\DeclareMathOperator{\proy}{\textbf{proy}}
\DeclareMathOperator{\nulll}{\textbf{nul}}
\DeclareMathOperator{\diag}{\textbf{diag}}
\DeclareMathOperator{\col}{\textbf{col}}
\DeclareMathOperator{\fila}{\textbf{fila}}
\DeclareMathOperator{\dimm}{dim}
\DeclareMathOperator{\Traz}{Tr}
%\theoremstyle{definition}
\everymath{\displaystyle}
\newtheorem{ejemplo}{{Ejemplo }}[section]
\newtheorem{teo}{{Teorema}}[section]
\newtheorem{defi}{{Definici\'on}}[section]
\newtheorem{pros}{{Proposici\'on}}[section]
\newtheorem{cor}{{Corolario}}[section]
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview={XYZ null null 1}}
\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
library(ggplot2)
library(grid)
#library(animation)
# set global chunk options
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)
@

%\title{\underline{\textbf{Notas de mat\'ematica}}}
%\date{}
%\maketitle
\hspace*{0.5\linewidth}
\begin{minipage}{0.6\linewidth}
Curso: Introducci\'on a la Probabilidad y Estad\'istica CM -274\par
Ejercicios de Laboratorio de R\par
\end{minipage}

\vspace{0.5cm}

\textbf{Lecturas Importantes }
\begin{enumerate}
\item Tutorial de gr\'aficos en R, usando \texttt{ggplot2}

\url{http://tutorials.iq.harvard.edu/R/Rgraphics/Rgraphics.html}.
\end{enumerate}


%{\normalsize Los c\'odigos, se presentaran impresos,  o como un archivo con extensi\'on $.R$, mostrando ejemplos de su ejecuci\'on.}
\setlength{\unitlength}{1in}

\begin{picture}(6,.1) 
\put(0,0) {\line(1,0){6.25}}         
\end{picture}

\vspace{0.5cm}

{\Large Preguntas }

\begin{enumerate}
\item 
\begin{enumerate}
\item Almacena el siguiente vector: 
<<foo1, prompt=TRUE, comment=NA, eval=FALSE>>=
f1<- c(13563,-14156,-14319,16981,12921,11979,9568,8833,-12968, 8133)
@
Entonces realiza lo siguiente:

\begin{itemize}
\item Muestra la salida todos los elementos de \texttt{f1} que, cuando se eleva a una potencia de 75, no son infinitos.
\item Devuelve los elementos de \texttt{f1}, excluyendo aquellos que resultan en infinito negativo cuando se eleva a una potencia de $75$.
\end{itemize}
\item Almacena la siguiente matriz $3 \times 4$, como el objeto \texttt{varMatriz}

\[
\begin{pmatrix}
77875.40   &  27551.45 & 23764.30 & -36478.88\\
-35466.25  & -73333.85 & 36599.69 & -70585.69\\
-39803.81 & 55976.34 & 76694.82 & 47032.00
\end{pmatrix}
\]

Entonces realiza lo siguiente:

\begin{itemize}
\item Identifica los \'indices espec\'ificos de las entradas de \texttt{varMatriz} que son \texttt{NaN} cuando se eleva \texttt{varMatriz} a una potencia de $65$ y se divide por infinito.

\item Devuelve los valores en \texttt{varMatriz} que NO son \texttt{NaN} cuando se eleva \texttt{varMatriz} a una potencia de $67$ y se a\~nade infinito al resultado. Confirma que esto es id\'entico a identificar aquellos valores en  \texttt{varMatriz} que, cuando aumentan a una potencia de $67$, no son iguales al infinito negativo.
\item Identifique los valores en \texttt{varMatriz} que sean infinito negativo o finito cuando eleva  \texttt{varMatriz} a una potencia de $67$.
\end{itemize}
\item Considere la siguiente l\'inea de c\'odigo:

<<foo2, prompt=TRUE, comment=NA, eval=FALSE>>=
f2 <- c(4.3,2.2,NULL,2.4,NaN,3.3,3.1,NULL,3.4,NA)
@
Decide cu\'al de las siguientes afirmaciones son verdaderas y cu\'ales son falsas y luego use R para confirmar:

\begin{itemize}
\item La longitud de \texttt{f2 } es $8$.
\item Llamando a \texttt{which(x=is.na(x=f2))}, no resultar\'a en $4$ y $8$.
\item Verificando \texttt{is.null(x=f2)}, proporciona la localizaci\'on de dos valores NULL, presentes.
\end{itemize}
\end{enumerate}

\item

\begin{enumerate}
\item Dada una lista cuyos miembros son vectores de cadena de caracteres de diferentes longitudes, utilice una funci\'on  con \texttt{lapply} para pegar un signo de exclamaci\'on al final de cada elemento de cada miembro, con una cadena vac\'ia como car\'acter de separaci\'on (tenga en cuenta que el comportamiento predeterminado de \texttt{paste} cuando se aplica a los vectores de caracteres). Ejecuta tus  l\'ineas de c\'odigo en la lista dada por:
<<foo3, prompt=TRUE, comment=NA, eval=FALSE>>=
f3 <- list("a",c("b","c","d","e"),"f",c("g","h","i"))
@
\item Escribe una funci\'on llamada \texttt{geolista} que puede buscar a trav\'es de una  lista especificada y calcula las medias geom\'etricas de cada miembro seg\'un las siguientes pautas:

\begin{itemize}
\item La funci\'on debe definir y utilizar una funci\'on de ayuda interna que devuelve la media geom\'etrica de un argumento vectorial.
\item Suponga que la lista s\'olo puede tener vectores num\'ericos o matrices num\'ericas como sus miembros. La funci\'on debe contener un bucle apropiado para inspeccionar a cada miembro de la lista  a la vez.
\item Si el miembro de la lista es un vector, calcula la media geom\'etrica de ese vector, sobrescribiendo el miembro con el resultado, que debe ser un solo n\'umero.
\item Si el miembro de la lista es una matriz, utilice un bucle impl\'icito para calcular la media geom\'etrica de cada fila de la matriz, sobrescribiendo el miembro con los resultados.
\item La lista final debe ser devuelta al usuario.
\end{itemize}

Ahora, como una prueba r\'apida, compruebe que tu funci\'on coincida con las siguientes dos llamadas:

\begin{verbatim}
f4 <- list(1:3,matrix(c(3.3,3.2,2.8,2.1,4.6,4.5,3.1,9.4),4,2),
            matrix(c(3.3,3.2,2.8,2.1,4.6,4.5,3.1,9.4),2,4))
geolista(f4)
[[1]]
[1] 1.817121
[[2]]
[1] 3.896152 3.794733 2.946184 4.442972
[[3]]
[1] 3.388035 4.106080
\end{verbatim}

\begin{verbatim}
f5 <- list(1:9,matrix(1:9,1,9),matrix(1:9,9,1),matrix(1:9,3,3))
geolista(f5)
[[1]]
[1] 4.147166
[[2]]
[1] 4.147166[[3]]
[1] 1 2 3 4 5 6 7 8 9
[[4]]
[1] 3.036589 4.308869 5.451362
\end{verbatim}
\item Escribe dos funciones de R: una que toma una funci\'on como argumento de entrada y otra que devuelve una funci\'on como salida.
\end{enumerate}
\item

\begin{enumerate}
\item Supongamos que representamos el tri\'angulo de Pascal como una lista, donde el elemento $n$ es la fila $n$ del tri\'angulo. Por ejemplo, el tri\'angulo de Pascal a la profundidad cuatro seria dado por:

<<foo4, prompt=TRUE, comment=NA, eval=FALSE>>=
list(c(1), c(1, 1), c(1, 2, 1), c(1, 3, 3, 1))
@

La n-\'esima fila se puede obtener de la fila $n-1$ a\~nadiendo todos los pares adyacentes de n\'umeros, luego prefijando y sufijando a $1$. Escribe una funci\'on que, dado el tri\'angulo de Pascal a la profundidad $n$, devuelve el tri\'angulo de Pascal a la profundidad $n + 1$. Comprueba que la und\'ecima fila da los coeficientes binomiales $\binom{10}{i}$ para $i = 0,1, \dots 10$.
\item Supongamos que necesitamos todas las $2^n$ secuencias binarias de longitud $n$. Una forma de generarlas es con bucles anidados. Por ejemplo, el siguiente c\'odigo genera una matriz \texttt{binseq}, donde cada fila es una secuencia binaria diferente de longitud tres.

<<foo5, prompt=TRUE, comment=NA, eval=FALSE>>=
binseq <- matrix(nrow = 8, ncol = 3)
r <- 0 # fila actual de  binseq
for (i in 0:1) {
  for (j in 0:1) {
    for (k in 0:1) {
      r <- r + 1
      binseq[r,] <- c(i, j, k)
    }
  }
}
@

\begin{verbatim}
binseq
[,1] [,2] [,3]
[1,] 0 0 0
[2,] 0 0 1
[3,] 0 1 0
[4,] 0 1 1
[5,] 1 0 0
[6,] 1 0 1
[7,] 1 1 0
[8,] 1 1 1
\end{verbatim}
Claramente este enfoque ser\'a un poco tedioso para grandes valores de  $n$. Una alternativa es utilizar la recursi\'on. Supongamos que $A$ es una matriz de tama\~no $2^n \times n$, donde cada fila es una secuencia binaria diferente de longitud $n$. Entonces la siguiente matriz contiene todas las secuencias binarias de longitud $n + 1$:

\[
C=
\left[
\begin{array}{c|c}
O & A \\
\hline
1 & A
\end{array}
\right]
\]

Aqu\'i \textbf{0} es un vector de ceros y \textbf{1} es un vector de unos.

Utiliza esta idea para escribir una funci\'on recursiva \texttt{binseq}, que toma como entrada un entero $n$ y devuelve una matriz que contiene todas las secuencias binarias de longitud $n$, como filas de la matriz. En tu programa debes encontrar las funciones \texttt{cbind} y \texttt{rbind} particularmente \'util.
\end{enumerate}
\item 

\begin{enumerate}
\item Corre 
<<foo6, prompt=TRUE, comment=NA, eval=FALSE>>=
ggplot(data = mpg)
@
?`Qu\'e ves?.
\item ?`Cu\'antas filas hay en \texttt{mpg}?. ?` Cu\'antas columnas?.
\item ?`Qu\'e describe la variable \texttt{drv}?. Lee la ayuda  \texttt{?mpg} para averiguarlo.
\item Realiza un diagrama de dispersi\'on de \texttt{hwy} vs \texttt{cyl}.
\item ?`Qu\'e sucede si haces un diagrama de dispersi\'on de \texttt{class} vs \text{drv}?. ?`Por qu\'e el gr\'afico no es \'util?.
\item ?`Qu\'e ha salido mal con este c\'odigo?. ?`Por qu\'e los puntos no son azules?
<<foo7, prompt=TRUE, comment=NA, eval=FALSE >>=
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy, color = "blue"))
@
\item ?`Qu\'e variables en \texttt{mpg} son categ\'oricas?. ?`Qu\'e variables son continuas?. ?`C\'omo puedes ver esta informaci\'on cuando se ejecuta \texttt{mpg}?.
\item Asigne una variable continua a  \texttt{color}, \texttt{size} y \texttt{shape}. ?`C\'omo se comportan estas est\'eticas de manera diferente para variables categ\'oricas y continuas?.
\item ?`Qu\'e sucede si se asigna la misma variable a  est\'eticas m\'ultiples?.
\item ?`Qu\'e hace la est\'etica \texttt{stroke}?. ?` Con qu\'e formas trabaja?.
\item ?`Qu\'e sucede si se asigna una est\'etica a algo que no sea un nombre de variable, como \texttt{aes(color = displ <5)}?.
\item Una forma de agregar variables adicionales es con \texttt{aesthetics (est\'etica)}. Otra forma, particularmente \'util para las variables categ\'oricas, es dividir el gr\'afico que resulta  en \texttt{facets}, subgr\'aficos donde cada uno muestra un subconjunto de los datos.

Para realizar \texttt{facets} a tu gr\'afico por una sola variable, usa \texttt{facet\_wrap()}. El primer argumento de \texttt{facet\_wrap()} debe ser una f\'ormula, que se crea con $\sim$ seguido de un nombre de variable (aqu\'i "f\'ormula" es el nombre de una estructura de datos en R, no un sin\'onimo de "ecuaci\'on"). La variable que se pasa a \texttt{facet\_wrap()} debe ser discreta.

\vspace{0.2cm}

<<foo7a, prompt=TRUE, comment=NA, eval=TRUE >>=
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy)) + 
  facet_wrap(~ class, nrow = 2)
@

\vspace{0.2cm}


Para realizar \texttt{facets} en la combinaci\'on de dos variables, agrega  \texttt{facet\_grid()} a la llamar al  gr\'afico. El primer argumento de \texttt{facet\_grid()} es tambi\'en una f\'ormula. Esta vez la f\'ormula debe contener dos nombres de variables separados por un $\sim$.


\vspace{0.2cm}

<<foo7b, prompt=TRUE, comment=NA, eval=TRUE >>=
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy)) + 
  facet_grid(drv ~ cyl)
@

\begin{itemize}
\item ?` Qu\'e sucede si hace \texttt{facets} en una variable continua.
\item ?` Qu\'e significan las celdas vac\'ias en el gr\'afico con $\text{facet\_grid(drv }\sim \text{cyl)}$?. ?`C\'omo se relacionan con el gr\'afico?.

<<foo7c, prompt=TRUE, comment=NA, eval=FALSE >>=
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = drv, y = cyl))
@
\item ?`Qu\'e gr\'aficos hace el siguiente c\'odigo?. ?`Qu\'e hace el punto . ?.

<<foo7d, prompt=TRUE, comment=NA, eval=FALSE >>=
ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy)) +
  facet_grid(drv ~ .)

ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy)) +
  facet_grid(. ~ cyl)
@

\end{itemize}
\item Lee \texttt{?facet\_wrap}.?`Qu\'e hace \texttt{nrow}?. ?` Qu\'e hace \texttt{ncol}?.?`Qu\'e otras opciones controlan la disposici\'on gr\'afica?. ?`Qu\'e no hace \texttt{facet\_grid}, tiene los argumentos \texttt{nrow} y \texttt{ncol}?.
\item Cuando se utiliza \texttt{facet\_grid()} normalmente se debe colocar la variable con m\'as niveles \'unicos en las columnas. ?`Por qu\'e?.
\end{enumerate}
\item Resuelve las siguientes preguntas:

\begin{enumerate}
\item ?`Qu\'e ocurre a un factor, cuando se modifica sus niveles?

<<foo8, prompt=TRUE, comment=NA, eval=FALSE >>=
f1 <- factor(letters)
levels(f1) <- rev(levels(f1))
@
\item ?`Qu\'e hace este c\'odigo?. ?`C\'omo f2 y f3 difieren de f1?.
<<foo9, prompt=TRUE, comment=NA, eval=FALSE >>=
f2 <- rev(factor(letters))
f3 <- factor(letters, levels = rev(letters))
@
\item ?`Qu\'e atributos posee un data frames?.
\item ?`Qu\'e hace \texttt{as.matrix()} cuando se aplica a un data frame con columnas de diferentes tipos?.
\item ?` Se puede tener un data frame de datos con 0 filas?. ?`Qu\'e hay de $0$ columnas?.
\item ?`Qu\'e devuelve \texttt{upper.tri()}?. ?`C\'omo funciona los subconjuntos de una matriz con esta funci\'on?. ?`Necesitamos reglas de subconjunto adicionales para describir su comportamiento?.
\item Implemente tu propia funci\'on que extrae las entradas diagonales de una matriz (debe comportarse como \texttt{diag(x)} donde $x$ es una matriz).
\item ?`C\'omo cambiar\'ias aleatoriamente las columnas de un data frame? (Esta es una t\'ecnica importante en los bosques aleatorios). ?`Puedes permutar las filas y las columnas simult\'aneamente en un solo paso?.
\item ?`C\'omo seleccionarias una muestra aleatoria de $m$ filas de un data frame de datos?. ?`Qu\'e pasa si la muestra tiene que ser contigua (es decir, con una fila inicial, una fila final y cada fila entre ellas)?.
\item ?`C\'omo podr\'ias colocar las columnas en un data frame de datos en orden alfab\'etico?.
\item Enumera tres formas en que un entorno difiere de una lista.
\item Usando \texttt{parent.env()} y un bucle (o una funci\'on recursiva), verifica que los predecesores  de \texttt{globalenv ()} incluyan \texttt{baseenv()} y \texttt{emptyenv()}. Utiliza la misma idea b\'asica para implementar tu propia versi\'on de \texttt{search()}.
\end{enumerate}
\end{enumerate}

\end{document}
